// Code generated by "enumer -type=UserStateType"; DO NOT EDIT.

package model

import (
	"fmt"
)

const _UserStateTypeName = "UnknownHiddenVisible"

var _UserStateTypeIndex = [...]uint8{0, 7, 13, 20}

func (i UserStateType) String() string {
	if i < 0 || i >= UserStateType(len(_UserStateTypeIndex)-1) {
		return fmt.Sprintf("UserStateType(%d)", i)
	}
	return _UserStateTypeName[_UserStateTypeIndex[i]:_UserStateTypeIndex[i+1]]
}

var _UserStateTypeValues = []UserStateType{0, 1, 2}

var _UserStateTypeNameToValueMap = map[string]UserStateType{
	_UserStateTypeName[0:7]:   0,
	_UserStateTypeName[7:13]:  1,
	_UserStateTypeName[13:20]: 2,
}

// UserStateTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func UserStateTypeString(s string) (UserStateType, error) {
	if val, ok := _UserStateTypeNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to UserStateType values", s)
}

// UserStateTypeValues returns all values of the enum
func UserStateTypeValues() []UserStateType {
	return _UserStateTypeValues
}

// IsAUserStateType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i UserStateType) IsAUserStateType() bool {
	for _, v := range _UserStateTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
