// Code generated by "enumer -type=StatusType"; DO NOT EDIT.

package model

import (
	"fmt"
)

const _StatusTypeName = "InProgressDiscussedArchived"

var _StatusTypeIndex = [...]uint8{0, 10, 19, 27}

func (i StatusType) String() string {
	i -= 1
	if i < 0 || i >= StatusType(len(_StatusTypeIndex)-1) {
		return fmt.Sprintf("StatusType(%d)", i+1)
	}
	return _StatusTypeName[_StatusTypeIndex[i]:_StatusTypeIndex[i+1]]
}

var _StatusTypeValues = []StatusType{1, 2, 3}

var _StatusTypeNameToValueMap = map[string]StatusType{
	_StatusTypeName[0:10]:  1,
	_StatusTypeName[10:19]: 2,
	_StatusTypeName[19:27]: 3,
}

// StatusTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func StatusTypeString(s string) (StatusType, error) {
	if val, ok := _StatusTypeNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to StatusType values", s)
}

// StatusTypeValues returns all values of the enum
func StatusTypeValues() []StatusType {
	return _StatusTypeValues
}

// IsAStatusType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i StatusType) IsAStatusType() bool {
	for _, v := range _StatusTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
