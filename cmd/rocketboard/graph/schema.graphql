schema {
    query: RootQuery
    mutation: RootMutation
}

type RootQuery {
    retrospectiveById(id: ID!): Retrospective
}

type RootMutation {
    startRetrospective(name: String): String!
    addCardToRetrospective(id: ID!, column: String, message: String): String!
    moveCard(id: ID!, column: String!): String!
    newVote(cardId: ID!): Vote!
}

type Retrospective {
    id: ID!
    created: Time
    updated: Time
    name: String

    cards: [Card]
    columns: [Column]
}

type Column {
    name: String
    cards: [Card]
}

type Card {
    id: ID!
    created: Time
    updated: Time
    message: String
    creator: String
    status: Int
    column: String
    votes: [Vote]
}

type Vote {
    id: ID!
    created: Time
    updated: Time
    cardId: String
    voter: String
    count: Int
}

scalar Time
